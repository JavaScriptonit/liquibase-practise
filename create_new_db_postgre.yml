---
- name: Управление базой данных с помощью Liquibase
  hosts: serverspace_host_postgres
  become: no
  vars_files:
    - vars/main.yml
  vars:
    new_db_name: new_database  # Название базы данных
    new_db_user: new_myuser      # Имя пользователя базы данных
    new_db_password: mysecurepassword  # Пароль пользователя базы данных
    postgre_user: postgres
    postgres_password: your_postgres_password  # Поскольку вы используете peer, этот параметр не нужен
  tasks:
    - name: Создание новой базы данных
      postgresql_db:
        name: "{{ new_db_name }}"
        state: present
        login_user: "{{ postgre_user }}"
        login_password: "{{ postgres_password }}"

    # \du - Проверка прав пользователя в psql
    - name: Создание пользователя
      postgresql_user:
        # db: "{{ new_db_name }}"
        name: "{{ new_db_user }}"
        password: "{{ db_password }}"
        # priv: ALL
        state: present

    # \c mydatabase - Подключение к базе данных
    # SELECT grantee, privilege_type FROM information_schema.role_table_grants WHERE table_catalog = 'mydatabase' AND grantee = 'myuser'; - Проверка привилегий пользователя
    - name: Предоставление всех привилегий пользователю на базе данных
      postgresql_privs:
        database: "{{ new_db_name }}"
        role: "{{ new_db_user }}"
        privs: ALL
        objs: ALL_IN_SCHEMA
        state: present

    # \c mydatabase - Подключение к базе данных
    # \dt - Проверка созданных таблиц
    # - name: Создание таблицы в базе данных
    #   postgresql_query:
    #     db: "{{ new_db_name }}"
    #     query: |
    #       CREATE TABLE IF NOT EXISTS example_table (
    #         id SERIAL PRIMARY KEY,
    #         name VARCHAR(100),
    #         created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    #       );

    # \c mydatabase - Подключение к базе данных
    # SELECT * FROM example_table; - Проверка вставленных данных в таблице
    # - name: Вставка данных в таблицу
    #   postgresql_query:
    #     db: "{{ new_db_name }}"
    #     query: |
    #       INSERT INTO example_table (name) VALUES ('Example Name');

    # \du - Проверка прав пользователя в psql
    - name: Предоставление всех привилегий пользователю
      postgresql_user:
        name: "{{ new_db_user }}"
        role_attr_flags: "SUPERUSER"  # Добавляем нужные привилегии
        state: present